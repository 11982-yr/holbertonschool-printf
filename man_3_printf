.TH _PRINTF 3 "October 2025" "Holberton Project" "Library Functions Manual"
.SH NAME
_printf \- produce output according to a format
.SH SYNOPSIS
.B #include "main.h"
.PP
.BI "int _printf(const char *format, ...);"
.SH DESCRIPTION
The
.B _printf
function produces output according to a format string.
The format string is composed of zero or more characters,
and directives introduced by the '%' character.

This version supports the following conversion specifiers:

.TP
.B %c
Print a single character.

.TP
.B %s
Print a string. If the string is NULL, the text "(null)" is printed.

.TP
.B %%
Print a literal percent sign.

.TP
.B %d
Print a signed decimal integer.

.TP
.B %i
Print a signed decimal integer (same as %d).

.TP
.B %b
Print an unsigned integer in binary (base 2).

.TP
.B %u
Print an unsigned decimal integer.

.TP
.B %o
Print an unsigned integer in octal (base 8).

.TP
.B %x
Print an unsigned integer in lowercase hexadecimal.

Any unsupported specifier following '%' will be printed literally with the '%' sign.

.SH RETURN VALUE
Upon success,
.B _printf
returns the number of characters printed (excluding the terminating null byte).
If an error occurs, the function returns \-1.

.SH EXAMPLES
.EX
_printf("Hello %s!\\n", "Najlaa");
Output: Hello Najlaa!

_printf("Grade: %c%%\\n", 'A');
Output: Grade: A%

_printf("Number: %d, Other: %i\\n", 42, -7);
Output: Number: 42, Other: -7

_printf("Binary: %b\\n", 7);
Output: Binary: 111

_printf("Unsigned: %u | Octal: %o\n", 77, 50);
Output: Unsigned: 77 | Octal: 62

.EE

.SH SEE ALSO
printf(3)

.SH NOTES
This implementation of _printf does not handle field width,
precision, flags, or length modifiers. Only the conversion
specifiers documented above are supported.

.SH AUTHORS
Yara Khalid Alrasheed
Najlaa Abdulaziz Alajaleen
