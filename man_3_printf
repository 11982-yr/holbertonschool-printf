.TH _PRINTF 3 "October 2025" "Holberton Project" "Library Functions Manual"
.SH NAME
_printf \- produce output according to a format
.SH SYNOPSIS
.B #include "main.h"
.PP
.BI "int _printf(const char *format, ...);"
.SH DESCRIPTION
The
.B _printf
function produces output according to a format string.
The format string is composed of zero or more characters,
and directives introduced by the '%' character.

This implementation supports the following conversion specifiers:

.TP
.B %c
Prints a single character.

.TP
.B %s
Prints a string. If the string is NULL, the text "(null)" is printed.

.TP
.B %%
Prints a literal percent sign.

.TP
.B %d
Prints a signed decimal integer.

.TP
.B %i
Prints a signed decimal integer (same as %d).

.TP
.B %b
Prints an unsigned integer in binary (base 2).

.TP
.B %u
Prints an unsigned decimal integer.

.TP
.B %o
Prints an unsigned integer in octal (base 8).

.TP
.B %x
Prints an unsigned integer in lowercase hexadecimal (base 16).

.TP
.B %X
Prints an unsigned integer in uppercase hexadecimal (base 16).

.TP
.B %S
Prints a string. Non-printable characters
(ASCII < 32 or >= 127) are shown as
.B \xHH
where HH is the uppercase hexadecimal value.

.TP
.B %p
Prints a pointer (memory address) in hexadecimal (base 16).
A null pointer is printed as (nil).

Any unsupported specifier following '%' will be printed literally
together with the '%' sign.

.SH RETURN VALUE
Upon success,
.B _printf
returns the number of characters printed (excluding the terminating null byte).
If an error occurs, the function returns \-1.

.SH EXAMPLES
.EX
_printf("Hello %s!\\n", "Najlaa");
Output: Hello Najlaa!

_printf("Grade: %c%%\\n", 'A');
Output: Grade: A%

_printf("Number: %d, Other: %i\\n", 42, -7);
Output: Number: 42, Other: -7

_printf("Binary: %b\\n", 7);
Output: Binary: 111

_printf("Unsigned: %u | Octal: %o\\n", 50, 50);
Output: Unsigned: 50 | Octal: 62

_printf("Hex lowercase: %x\\n", 48879u);
Output: Hex lowercase: beef

_printf("Hex uppercase: %X\\n", 48879u);
Output: Hex uppercase: BEEF

_printf("Best\\nSchool: %S\\n", "Best\nSchool");
Output: Best\x0ASchool

int *ptr = (int *)0x7ffe637541f0;
_printf("Pointer: %p\\n", ptr);
Output: Pointer: 0x7ffe637541f0

_printf("Null pointer: %p\\n", NULL);
Output: Null pointer: (nil)
.EE

.SH SEE ALSO
printf(3)

.SH NOTES
This implementation of _printf does not handle field width,
precision, flags, or length modifiers.
Only the conversion specifiers documented above are supported.

.SH AUTHORS
Yara Khalid Alrasheed
Najla Abdulaziz Alajalee
